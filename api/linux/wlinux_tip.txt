-------------------------------------------------------
备份：
tar -zcvf hxay130201.tar.gz * --exclude video --exclude download
tar -zxvf
wget http://nchc.dl.sourceforge.net/sourceforge/awstats/awstats-7.1-1.noarch.rpm
wget http://prdownloads.sourceforge.net/webadmin/webmin-1.700-1.noarch.rpm 

安装模式：　　　　　　rpm　–i　[安装选项]　　<软件包>
查询模式：　　　　　　rpm　–q　[查询选项]
验证模式：　　　　　　rpm　–V　或　–verify　[验证选项]
删除模式：　　　　　　rpm　–e　　<软件包> 
查询的命令格式如下：　　rpm　–q　　[查询选项] 
信息选项：
-i　　显示软件包的信息，包括名称、版本、描述信息。
-R　　显示这个软件包所依赖的软件包。　同--requires。
--provides　　显示这个软件包所提供的功能
-l　　列出这个软件包内所包含的文件。
-s　　显示这个软件包的状态，状态是指“normal”“not　installed”“replaced”

rpm -qa |grep vsftpd 查询是否安装了vsftpd（提示无）
强制安装：
#　rpm　–ivh　bar-1.0-1.i386.rpm　--nodeps 
rpm -ivh webmin-1.700-1.noarch.rpm
升级软件包：
#　rpm　–Uhv　　xanim-27064-1.i386.rpm 
删除：--allmatches 删除所有版本
#　rpm　–e　xanim 
--allmatches
删除<软件包>所指定的所有版本的软件，如果有多个版本存在的话，一般会给出错误码信息。

--nodeps
如果要删除的软件包是别的软件所必需的，在删除时用户会得到警告。这时，如果确认要强行删除，可以使用

--nodeps这个选项。这样一来，相关的软件就不能运行了。 

--test　　　不真正删除，只是测试。

df -h 查看文件系统使用

查看：查询档案或目录的磁盘使用空间 
能以指定的目录下的子目录为单位，显示每个目录内所有档案所占用的磁盘空间大小。例如： 
du -h/etc
du * -sh 显示目录的总大小
du --exclude <video, gc> -sh *
# du /etc | sort -nr | more  
sort 的参数 -nr 表示要以数字排序法进行反向排序
du -c log30.tar.gz log31.tar.gz 文件总和

rm -rf dirname 删除目录及文件

cp -r dirname 复制目录及文件

touch filename 创建文件

pwd print work directory

updatedb 更新文件数据库
locate filename 搜索文件名

设置系统时间，并写入硬件bios
date -s 05/10/2013
date -2 15:30:01
clock -w

显示目前所有档案系统的最大可用空间及使用情形
df -hi df -h

更改目录权限
drwxr-xr-x 22 root      root  4096 May 25 16:46 html 755
chown hxftp:apache html

搜索替换（注意空格）
# find . -name '*.html' -exec sed 's/kmbm/kcbm/' {} \;
find . -mtime -2 -print 两天内修改的文件
find . -user 'hxaytest' -print 所有者为hxaytest的文件
find . -group 'apache' -print apache组的用户
find . -perm 755 -print 权限查询
find . -name "*.php" | xargs echo "">testlog.log
find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f
find   /home   -uid   +501   列出/home目录内用户的识别码大于501的文件或目录
find    /   -mmin   -5         # 查找在系统中最后5分钟里修改过的文件
find    /   -mtime   -1       #查找在系统中最后24小时里修改过的文件
find   /home   -size   -512k               查小于512k的文件
find *.c -exec cp ‘{}’ /tmp ‘;’ 将find出来的东西拷到另一个地方
find . -user 48 | xargs chown -R hxftp:apache
git一个有用的地方，去除对pyc的跟踪
find . -regex '.*\.pyc' -exec git rm --cached {} \;
-----------
ps：将某个时间点的程序运作情况撷取下来
[root@linux ~]# ps aux
[root@linux ~]# ps -lA
[root@linux ~]# ps axjf
参数：
-A ：所有的 process 均显示出来，与 -e 具有同样的效用；
-a ：不与 terminal 有关的所有 process ；
-u ：有效使用者 (effective user) 相关的 process ；
x ：通常与 a 这个参数一起使用，可列出较完整信息。
输出格式规划：
l ：较长、较详细的将该 PID 的的信息列出；
j ：工作的格式 (jobs format)
-f ：做一个更为完整的输出。
特别说明：
由于 ps 能够支持的 OS 类型相当的多，所以他的参数多的离谱！
而且有没有加上 - 差很多！详细的用法应该要参考 man ps 喔！

范例1：将目前属于您自己这次登入的 PID 与相关信息列示出来
 
[root@linux ~]# ps -l
F S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD
0 S 0 5881 5654 0 76 0 - 1303 wait pts/0 00:00:00 su
4 S 0 5882 5881 0 75 0 - 1349 wait pts/0 00:00:00 bash
4 R 0 6037 5882 0 76 0 - 1111 - pts/0 00:00:00 ps
 
# 上面这个信息其实很多喔！各相关信息的意义为：
# F 代表这个程序的旗标 (flag)， 4 代表使用者为 super user；
# S 代表这个程序的状态 (STAT)，关于各 STAT 的意义将在内文介绍；
# PID 没问题吧！？就是这个程序的 ID 啊！底下的 PPID 则上父程序的 ID；
# C CPU 使用的资源百分比
# PRI 这个是 Priority (优先执行序) 的缩写，详细后面介绍；
# NI 这个是 Nice 值，在下一小节我们会持续介绍。
# ADDR 这个是 kernel function，指出该程序在内存的那个部分。如果是个 running
# 的程序，一般就是『 - 』的啦！
# SZ 使用掉的内存大小；
# WCHAN 目前这个程序是否正在运作当中，若为 - 表示正在运作；
# TTY 登入者的终端机位置啰；
# TIME 使用掉的 CPU 时间。
# CMD 所下达的指令为何！？
# 仔细看到每一个程序的 PID 与 PPID 的相关性为何喔！上头列出的三个程序中，
# 彼此间可是有相关性的吶！

[root@linux ~]# ps aux
USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
root 1 0.0 0.1 1740 540 ? S Jul25 0:01 init [3]
root 2 0.0 0.0 0 0 ? SN Jul25 0:00 [ksoftirqd/0]
root 3 0.0 0.0 0 0 ? S< Jul25 0:00 [events/0]
.....中间省略.....
root 5881 0.0 0.3 5212 1204 pts/0 S 10:22 0:00 su
root 5882 0.0 0.3 5396 1524 pts/0 S 10:22 0:00 bash
root 6142 0.0 0.2 4488 916 pts/0 R+ 11:45 0:00 ps aux
 
• USER：该 process 属于那个使用者账号的？
• PID ：该 process 的号码。
• %CPU：该 process 使用掉的 CPU 资源百分比；
• %MEM：该 process 所占用的物理内存百分比；
• VSZ ：该 process 使用掉的虚拟内存量 (Kbytes)
• RSS ：该 process 占用的固定的内存量 (Kbytes)
• TTY ：该 process 是在那个终端机上面运作，若与终端机无关，则显示 ?，另外， tty1-tty6 是本机上面的登入者程序，若为 pts/0 等等的，则表示为由网络连接进主机的程序。
• STAT：该程序目前的状态，主要的状态有：
o R ：该程序目前正在运作，或者是可被运作；
o S ：该程序目前正在睡眠当中 (可说是 idle 状态啦！)，但可被某些讯号 (signal) 唤醒。
o T ：该程序目前正在侦测或者是停止了；
o Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态
• START：该 process 被触发启动的时间；
• TIME ：该 process 实际使用 CPU 运作的时间。
• COMMAND：该程序的实际指令为何？