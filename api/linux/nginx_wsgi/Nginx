Nginx：
------------
停止和禁用apache
service httpd stop
chkconfig –levels 2345 off
sysv-rc-conf

停止 apache 占用 80
chkconfig httpd off
------------
安装方法：
http://www.linuxidc.com/Linux/2014-08/105422.htm
---
add-apt-repository: command not found 相关问题：
sudoapt-get install python-software-properties
sudoapt-get install apt-file
apt-file update
apt-file search add-apt-repository
apt-get install software-properties-common
---

add-apt-repository ppa:nginx/stable
apt-get update
apt-get install nginx

http://www.sxt.cn/u/4647/blog/5559 靠谱
http://www.nginx.cn/install
wget http://nginx.org/packages/centos/5/noarch/RPMS/nginx-release-centos-5-0.el5.ngx.noarch.rpm
rpm -ivh nginx-release-centos-5-0.el5.ngx.noarch.rpm
yum install nginx

whereis nginx

/usr/sbin/nginx -v
**运行和控制**：
http://www.nginx.cn/nginxchscommandline

chkconfig --add nginx
chkconfig --level 35 nginx on
chkconfig --list | grep nginx

停止
nginx -s stop
#查询nginx主进程号
ps -ef | grep nginx
#停止进程
kill -QUIT 主进程号
#快速停止
kill -TERM 主进程号
#强制停止
pkill -9 nginx
重启
service nginx restart
/usr/local/nginx/sbin/nginx -s reload

http://django-china.cn/topic/124/

/etc/nginx/nginx.conf
修改ngxin运行用户为原apache运行用户:apache，这样可以不用修改web目录权限的情况下完美解决权限问题。
在nginx.conf文件第一行，加上 user root
本来是默认用户，权限不够会造成静态文件无法引用
-----
Permission：
connect() to 127.0.0.1:8077 failed (13: Permission denied) while connecting to upstream, client: 127.0.0.1
conf.d/default.conf
查看了一下nginx进程ps aux|grep nginx
 发现都是nobody的进程，但是nginx的目录都是root用户，另外集群tomcat也是属于root用户，而且root启动，查看nginx.conf:
 user nobody
 改成：user root
 停止nginx -s stop
 重启nginx -c  nginx.conf

-------------------------------------------------------------------
安装 PHP-FPM ：
PHP-FPM是一个PHP FastCGI管理器，是只用于PHP的, 可以在 http://php-fpm.org/download下载得到.

PHP-FPM其实是PHP源代码的一个补丁，旨在将FastCGI进程管理整合进PHP包中。
必须将它patch到你的PHP源代码中，在编译安装PHP后才可以使用。
新版PHP已经集成php-fpm了，不再是第三方的包了，推荐使用

yum -y install gcc automake autoconf libtool make

yum -y install gcc gcc-c++ glibc

yum -y install libmcrypt-devel mhash-devel libxslt-devel \
libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel \
zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel \
ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel \
krb5 krb5-devel libidn libidn-devel openssl openssl-devel

http://www.nowamagic.net/academy/detail/1226239
yum erase php*
or
yum remove httpd* php* #这个命令是删除不干净的
yum remove php-cli php-common php   #删除
--------------------------------------------
限速：
http://enetor.iteye.com/blog/1129671
http://www.linuxidc.com/Linux/2013-07/88023.htm
对于全局限速，我们只需要在后面加上参数即可，比如每秒20个请求，rate=20r/s，即:
limit_req_zone $binary_remote_addr zone=perip:5m rate=20r/s;

limit_zone针对每个IP定义一个存储session状态的容器。
limit_zone one $binary_remote_addr 10m;

limit_conn zone_name 允许每个客户端建立的链接数
limit_rate 每个链接的最大速率

limit_conn one 2; 
limit_rate_after 1m; 
limit_rate 40k;  

