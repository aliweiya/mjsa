-------------
SecureFX 乱码：
c:\Users\Administrator\AppData\Roaming\VanDyke\Config\Sessions

在SecureFx中选择Options->Global Options菜单，在打开的Global Options的对话框中选择General。Configuration folder。里面的路径就是SecureFX的配置文件路径。在Sessions子目录下找到对应的Session的ini配置文件。
将"Filenames Always Use UTF8"=00000000修改为"Filenames Always Use UTF8"=00000001保存重新连接即可。 
Session Options（会话选项） -> Terminal（终端） -> Appearance（显示）, 将Charater（字符）选择成 UTF-8就支持中文了。

--------------------------------------------------------
mysql：
webadmin 中， 直接添加用户，并授权，作为远程账号。主机，加权限。
/etc/rc.d/init.d/mysqld start

vsftpd：
http://blog.chinaunix.net/uid-18831400-id-151990.html
http://www.cnblogs.com/hhuai/archive/2011/02/12/1952647.html
yum install vsftpd
service vsftpd status
service vsftpd start

添加ftp用户，设置主目录为上传目录，更改权限。
/etc/vsftpd/conf
chroot_list_file=/etc/vsftpd/chroot_list

userlist_deny=NO
userlist_file=/etc/vsftpd/user_list
#local_root=/var/www/html
ftp_username=hxftp
user_list里面把不用的用户注释掉，添加建立的ftp用户。
---------------------------------------------------------

-----------------------------------------------------------
centos 升级 python2.6.6 -> python2.7.8
wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz 
./configure --enable-shared --prefix=/usr/local/python2.7
--enable-unicode=ucs4  
 make make altinstall

cd /usr/bin/
ls -l |grep python
mv python python.back
ln -sv /usr/local/python2.7/bin/python /usr/bin/python

#ln -s /usr/local/python2.7/lib/libpython2.7.so /usr/lib
#ln -s /usr/local/python2.7/lib/libpython2.7.so.1.0 /usr/lib
#ln -s /usr/local/python2.7/bin/python2.7 /usr/bin
#
#/sbin/ldconfig -v

修改vim /usr/bin/yum
把头前!#/usr/bin/python 改为 /usr/bin/python2.6.6
------------------------------------------------------------
yum groupinstall "Development tools"  
yum install zlib-devel bzip2-devel pcre-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel python-devel libxml2  libxml2-devel  python-setuptools  zlib-devel wget openssl-devel pcre pcre-devel sudo gcc make autoconf automake 
-------------------
http://www.2cto.com/os/201402/279911.html
http://www.68idc.cn/help/jiabenmake/qita/2014042391351.html
------------------------------------------------------------
这个是正确的，关键是：
http://www.johnwoltman.com/post/installing-geodjango-postgis-centos-65/
# Download and install Python
wget http://python.org/ftp/python/2.7.6/Python-2.7.6.tgz
tar xzf Python-2.7.6.tgz
cd Python-2.7.6
./configure --prefix=/usr/local --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib"
make
# Make sure you use altinstall, or you'll overwrite the system python
这一句： make altinstall

get-pip:
wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py
ln -s /usr/local/python2.7/bin/pip /usr/bin

source ./bin/activate

which python/pip
----------
然后：
The command python2.7 should now be available.  Let's keep installing packages for Python:
wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python2.7
easy_install-2.7 pip virtualenv
yum update httpd
yum install httpd-devel
yum install glibc
-------------------
yum install db4
http://rpm.pbone.net/index.php3/stat/4/idpl/25155868/dir/fedora_20/com/libdb4-4.8.30-11.fc20.x86_64.rpm.html
wget ftp://ftp.univie.ac.at/systems/linux/fedora/releases/20/Everything/x86_64/os/Packages/l/libdb4-4.8.30-11.fc20.x86_64.rpm
libdb47-4.7.25-3mamba.x86_64 requires libc.so.6(GLIBC_2.14)(64bit)
-------------------
easy_install mod_wsgi

---------------------------------------------------------------------
centos 6 不联网：
关闭了 NetworkManager，还得在 /etc/sysconfig/network-scripts/ifcfg-eth0）並把 ONBOOT=no 切換為 ONBOOT=yes
---------------------------------------------------------------------
停止和禁用apache
service httpd stop
chkconfig –levels 2345 off

Nginx：
wget http://nginx.org/packages/centos/5/noarch/RPMS/nginx-release-centos-5-0.el5.ngx.noarch.rpm
rpm -ivh nginx-release-centos-5-0.el5.ngx.noarch.rpm
yum install nginx

whereis nginx

/usr/sbin/nginx -v

停止
nginx -s stop
#查询nginx主进程号
ps -ef | grep nginx
#停止进程
kill -QUIT 主进程号
#快速停止
kill -TERM 主进程号
#强制停止
pkill -9 nginx
重启

/usr/local/nginx/sbin/nginx -s reload

http://django-china.cn/topic/124/

/etc/nginx/nginx.conf
修改ngxin运行用户为原apache运行用户:apache，这样可以不用修改web目录权限的情况下完美解决权限问题。
在nginx.conf文件第一行，加上 user root
本来是默认用户，权限不够会造成静态文件无法引用

conf.d/default.conf
server {
        listen   80;
        server_name localhost;
        
        access_log /home/work/var/test/logs/access.log;
        error_log  /home/work/var/test/logs/error.log;

        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        access_log off;
        location / {
         include        /etc/nginx/uwsgi_params;
         uwsgi_pass     127.0.0.1:8000;
        }
        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
        #location /static/ {
        #    alias  /home/work/src/sites/testdjango1/testdjango/collectedstatic/;
        #    index  index.html index.htm;
        #}
        #location /media/ {
        #    alias  /home/work/src/sites/testdjango1/testdjango/public/media/;
        #}
    }
    artmall 目录下 : djangochina_socket.xml

<uwsgi>
    <socket>:8000</socket>
    <chdir>/var/www/wsctest/artmall-src/oscar/artmall</chdir>
    <module>django_wsgi</module>
    <processes>4</processes>
    <daemonize>uwsgi.log</daemonize>
</uwsgi>

    uwsgi -x djangochina_socket.xml
-------------------------------------------------------------------