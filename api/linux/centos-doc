http://localhost/awstats/awstats.pl?config=hxay2005.net
selinux:
http://www.cnblogs.com/xiaoluo501395377/archive/2013/05/26/3100444.html
awstats:
http://cuijunwei.com/1962
http://blog.chinaunix.net/uid-20076215-id-1978280.html
配置ubuntu linux中apache2支持perl 
sudo apt-get install libapache2-mod-perl2
先前装awstats已经对apache2.conf做了修改,在apache2.conf后面加上如下配置:
AddHandler cgi-script .cgi .pl  //一定要加上这个
 [root@www ~]# yum -y install mod_perl
[root@www ~]# vi /etc/httpd/conf.d/perl.conf
# line 17: uncomment

PerlSwitches -w
# line 26: uncomment

PerlSwitches -T
# line 32-38: uncomment like follows

Alias /perl /var/www/perl
<Directory /var/www/perl> # the directory for mod_perl environment

   SetHandler perl-script # looks all files as perl-scripts under this directory

#   AddHandler perl-script .cgi
# if set specific files, use this line and make the line above comment

#   PerlResponseHandler ModPerl::Registry
   PerlResponseHandler ModPerl::PerlRun
# specify PerlRun mode

   PerlOptions +ParseHeaders
   Options +ExecCGI
</Directory>
# line 45-51: uncomment ( this is for the status of mod_perl )

<Location /perl-status>
   SetHandler perl-script
   PerlResponseHandler Apache2::Status
   Order deny,allow
   Deny from all
   Allow from 10.0.0.0/24
# IP address you permit to access

</Location>
[root@www ~]# /etc/rc.d/init.d/httpd restart

Stopping httpd: [  OK  ]

Starting httpd: [  OK  ]
http://www.kafan.cn/edu/828094.html
yum remove 
---------------------------------------------------------
ctrl + alt + f1 -- f6
内存清理：
echo 1 > /proc/sys/vm/drop_caches
-------------
SecureFX 乱码：
c:\Users\Administrator\AppData\Roaming\VanDyke\Config\Sessions

在SecureFx中选择Options->Global Options菜单，在打开的Global Options的对话框中选择General。Configuration folder。里面的路径就是SecureFX的配置文件路径。在Sessions子目录下找到对应的Session的ini配置文件。
将"Filenames Always Use UTF8"=00000000修改为"Filenames Always Use UTF8"=00000001保存重新连接即可。 
Session Options（会话选项） -> Terminal（终端） -> Appearance（显示）, 将Charater（字符）选择成 UTF-8就支持中文了。

--------------------------------------------------------
mysql：
date.timezone ="Asia/Shanghai"
Can't connect to MySQL server on 'XXX' (13)
结果是 SELinux 不让 httpd 访问外网
getsebool -a | grep httpd
发现 httpd_can_network_connect_db --> off
解决方案：
#/usr/sbin/setsebool -P httpd_can_network_connect_db on

webadmin 中， 直接添加用户，并授权，作为远程账号。主机，加权限。
/etc/rc.d/init.d/mysqld start

service mariadb start
---------------------------------------------------------
vsftpd：
http://blog.chinaunix.net/uid-18831400-id-151990.html
http://www.cnblogs.com/hhuai/archive/2011/02/12/1952647.html
yum install vsftpd
service vsftpd status
service vsftpd start

添加ftp用户，设置主目录为上传目录，更改权限。
/etc/vsftpd/conf
chroot_list_file=/etc/vsftpd/chroot_list

userlist_deny=NO
userlist_file=/etc/vsftpd/user_list
#local_root=/var/www/html
ftp_username=hxftp
user_list里面把不用的用户注释掉，添加建立的ftp用户。

-----------------------------------------------------------
python 升级：
python2.6.6 -> python2.7.8
wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz 
./configure --enable-shared --prefix=/usr/local/python2.7
--enable-unicode=ucs4  
 make make altinstall

cd /usr/bin/
ls -l |grep python
mv python python.back
ln -sv /usr/local/python2.7/bin/python /usr/bin/python

#ln -s /usr/local/python2.7/lib/libpython2.7.so /usr/lib
#ln -s /usr/local/python2.7/lib/libpython2.7.so.1.0 /usr/lib
#ln -s /usr/local/python2.7/bin/python2.7 /usr/bin
#
#/sbin/ldconfig -v

修改vim /usr/bin/yum
把头前!#/usr/bin/python 改为 /usr/bin/python2.6.6
------------------
yum -y install gd libjpeg libjpeg-devel libpng libpng-devel freetype-devel 

yum groupinstall "Development tools"  
yum install zlib-devel bzip2-devel pcre-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel python-devel libxml2  libxml2-devel  python-setuptools  zlib-devel wget openssl-devel pcre pcre-devel sudo gcc make autoconf automake 
-------------------
http://www.2cto.com/os/201402/279911.html
http://www.68idc.cn/help/jiabenmake/qita/2014042391351.html
-------------------
这个是正确的，关键是：
http://www.johnwoltman.com/post/installing-geodjango-postgis-centos-65/
# Download and install Python
wget http://python.org/ftp/python/2.7.6/Python-2.7.6.tgz
tar xzf Python-2.7.6.tgz
cd Python-2.7.6
./configure --prefix=/usr/local --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib"
make
# Make sure you use altinstall, or you'll overwrite the system python
这一句： make altinstall

get-pip:
wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py
ln -s /usr/local/python2.7/bin/pip /usr/bin

source ./bin/activate

which python/pip
----------
然后：
The command python2.7 should now be available.  Let's keep installing packages for Python:
wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python2.7
easy_install-2.7 pip virtualenv
yum update httpd
yum install httpd-devel
yum install glibc
-------------------
yum install db4
http://rpm.pbone.net/index.php3/stat/4/idpl/25155868/dir/fedora_20/com/libdb4-4.8.30-11.fc20.x86_64.rpm.html
wget ftp://ftp.univie.ac.at/systems/linux/fedora/releases/20/Everything/x86_64/os/Packages/l/libdb4-4.8.30-11.fc20.x86_64.rpm
libdb47-4.7.25-3mamba.x86_64 requires libc.so.6(GLIBC_2.14)(64bit)
-------------------
easy_install mod_wsgi

---------------------------------------------------------------------
centos 6 不联网：
关闭了 NetworkManager，还得在 /etc/sysconfig/network-scripts/ifcfg-eth0）並把 ONBOOT=no 切換為 ONBOOT=yes
---------------------------------------------------------------------
防火墙：
http://www.2cto.com/os/201505/400718.html
http://www.jb51.net/os/Ubuntu/45291.html
http://www.linuxidc.com/Linux/2015-01/111937.htm X2Go 远程控制
http://www.iteye.com/news/7975 远程桌面软件
http://www.fs-security.com/

apt-get install ufw
ufw enable
ufw default deny
ufw allow 22/tcp 允许所有的外部IP访问本机的22/tcp (ssh)端口
ufw deny 22/tcp 禁止所有外部IP访问本机的22/tcp(ssh)端口

我们可以允许建立会话来接受流量：
p312 鸟

iptables [-AI 链名] [-io 网络接口] [-p 协议]  [-s 来源 IP/网域] [-d 目标 IP/网域] -j [ACCEPT|DROP|REJECT|LOG]
选项与参数：
-AI 链名：针对某的链进行规则的 "插入" 或 "累加"
-A ：新增加一条规则，该规则增加在原本规则的最后面。例如原本已经有四条规则，使用 -A 就可以加上第五条规则！
-I ：插入一条规则。如果没有指定此规则的顺序，默认是插入变成第一条规则。例如原本有四条规则，使用 -I 则该规则变成第一条，而原本四条变成 2~5 号
链 ：有 INPUT, OUTPUT, FORWARD 等，此链名称又与 -io 有关，请看底下。

-io 网络接口：设定封包进出的接口规范
-i ：封包所进入的那个网络接口，例如 eth0, lo 等接口。需与 INPUT 链配合；
-o ：封包所传出的那个网络接口，需与 OUTPUT 链配合；
-p 协定：设定此规则适用于哪种封包格式， 主要的封包格式有： tcp, udp, icmp 及 all 。

-s 来源 IP/网域：设定此规则之封包的来源项目，可指定单纯的 IP 或包括网域，
    例如：IP ： 192.168.0.100 网域： 192.168.0.0/24, 192.168.0.0/255.255.255.0 均可。
    若规范为『不许』时，则加上 ! 即可，例如：
    -s ! 192.168.100.0/24 表示不许 192.168.100.0/24 之封包来源；

-d 目标 IP/网域：同 -s ，只不过这里指的是目标的 IP 或网域。
-j ：后面接动作，主要的动作有接受(ACCEPT)、丢弃(DROP)、拒绝(REJECT)及记录(LOG)

--sport 埠口范围：限制来源的端口口号码，端口口号码可以是连续的，例如 1024:65535
--dport 埠口范围：限制目标的端口口号码。

-m ：一些 iptables 的外挂模块，主要常见的有：
    state ：状态模块
    mac ：网络卡硬件地址 (hardware address)

--state ：一些封包的状态，主要有：
    INVALID ：无效的封包，例如数据破损的封包状态
    ESTABLISHED：已经联机成功的联机状态；
    NEW ：想要新建立联机的封包状态；
    RELATED ：这个最常用！表示这个封包是与我们主机发送出去的封包有关
--mac-source ：就是来源主机的 MAC 啦！

--icmp-type ：后面必须要接 ICMP 的封包类型，也可以使用代号，例如 8 代表 echo request 的意思。
21,22,53,80,110,443,5900:5910
-A INPUT -i lo -j ACCEPT
-A INPUT -i eth1 -s 192.168.0.10 -j ACCEPT
-A INPUT -i eth1 -s 192.168.0.100 -j DROP

-A INPUT -i eth0 -p tcp --dport 21 -j DROP
-A INPUT -i eth0 -p udp --dport 137:138 -j ACCEPT

-A INPUT -i eth0 -p tcp -s 192.168.1.0/24 --sport 1024:65534 --dport ssh -j DROP


-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT 
-A INPUT -m state --state INVALID -j DROP
-A INPUT -p tcp -i eth0 --dport ssh -j ACCEPT 

-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 5432 -j ACCEPT

最好不要将所有的 ICMP 封包都丢弃！如果不是做为路由器的主机时，通常我们会把 ICMP type 8 (echo request) 拿掉而已，
让远程主机不知道我们是否存在，也不会接受 ping 的响应就是了。

范例：让 0,3,4,11,12,14,16,18 的 ICMP type 可以进入本机：
[root@www ~]# vi somefile
#!/bin/bash
icmp_type="0 3 4 11 12 14 16 18"
for typeicmp in $icmp_type
do
    iptables -A INPUT -i eth0 -p icmp --icmp-type $typeicmp -j ACCEPT
done
[root@www ~]# sh somefile
---------
PATH=/sbin:/bin:/usr/sbin:/usr/bin; export PATH
# 1. 清除规则
iptables -F
iptables -X
iptables -Z
# 2. 设定政策
iptables -P INPUT DROP
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT
# 3~5. 制订各项规则
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -i eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT
#iptables -A INPUT -i eth0 -s 192.168.1.0/24 -j ACCEPT
# 6. 写入防火墙规则配置文件
/etc/init.d/iptables save
[root@www ~]# sh bin/firewall.sh
-----------

# iptables -L

允许所有的web流量
iptables -A INPUT -p tcp -i eth0 --dport 80 -j ACCEPT 
阻断流量
iptables -A INPUT -j DROP 
所以除了web和ssh流量外其他任何流量都会被阻断

iptables -I INPUT 4 -i lo -j ACCEPT 

iptables-save 和iptables-restore命令来保存配置。 

保存您的防火墙股则到一个文件
iptables-save > /etc/iptables.up.rules 
接着修改 /etc/network/interfaces 脚本自动应用这些规则(末行是添加的)
auto eth0
iface eth0 inet dhcp
pre-up iptables-restore < /etc/iptables.up.rules
post-down iptables-restore < /etc/iptables.down.rules 

iptables-save > /etc/iptables.test.rules
gedit /etc/iptables.test.rules 
iptables-restore < /etc/iptables.test.rules 

------------------------------------------------------------------------
SSL too long：
http://www.jb51.net/article/56059.htm

listen 443;
server_name mail.jb51.net;

ssl on;
ssl_certificate server.crt;
ssl_certificate_key server.key;

http://www.poluoluo.com/server/201401/261178.html
-------------------------------------------------------------------------
nginx：
http://www.tuicool.com/articles/EJ3uY3
grep processor /proc/cpuinfo | wc -l

sudo systemctl start nginx
sudo systemctl enable nginx
sudo firewall-cmd --zone=public --add-port=80/tcp --permanent$ 
sudo firewall-cmd --reload
     
    # nginx passes PHP scripts to FastCGI server via a TCP/9000 socket
    # this setting much be consistent with /etc/php-fpm.d/www.conf
    # try_files prevents nginx from passing bad scripts to FastCGI server
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

cgi.fix_pathinfo = 0
date.timezone = "PRC"
$ sudo systemctl restart nginx
$ sudo systemctl restart php-fpm