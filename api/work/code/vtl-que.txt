vtl-que

css 加载
一些需要注意的：
-------------------------------------------------------------
##必须跳转一下要不获得补了角色信息
$Label.Register("UserPage")
#set($Page = $UserPage.GetSignInPage())##用户登录
#set($state= $Page.State)##登录状态
#if("success"==$state)         
<script type="text/javascript">
   window.location = window.location;
</script>
#elseif($Page.State=='error')##登录失败
<script type="text/javascript">
    alert("$Page.ErrorMsg!");
</script>
#end
-------------------------------------------------------------


ContentDataSet

Int Float

Object
NodeData ContentData

IList <T> 成员方法的调用：
    Add 将某项添加到 ICollection <T > 中。 （继承自 ICollection <T >。）
    Clear   从 ICollection <T > 中移除所有项。 （继承自 ICollection <T >。）
    IndexOf 确定 IList <T > 中特定项的索引。
    Insert  将一个项插入指定索引处的 IList <T >。
    Remove  从 ICollection <T > 中移除特定对象的第一个匹配项。 （继承自 ICollection <T >。）
    RemoveAt    移除指定索引处的 IList <T > 项。

List<T> 类：
    Reverse
    GetRange 
    ToArray


DateTime：类型公开以下成员
    Date    获取此实例的日期部分。
    Day 获取此实例所表示的日期为该月中的第几天。
    DayOfWeek   获取此实例所表示的日期是星期几。
    DayOfYear   获取此实例所表示的日期是该年中的第几天。
    Hour    获取此实例所表示日期的小时部分。
    Kind    获取一个值，该值指示由此实例表示的时间是基于本地时间、协调世界时 (UTC)，还是两者皆否。
    Millisecond 获取此实例所表示日期的毫秒部分。
    Minute  获取此实例所表示日期的分钟部分。
    Month   获取此实例所表示日期的月份部分。
    Now 获取一个 DateTime 对象，该对象设置为此计算机上的当前日期和时间，表示为本地时间。
    Second  获取此实例所表示日期的秒部分。
    Ticks   获取表示此实例的日期和时间的计时周期数。
    TimeOfDay   获取此实例的当天的时间。
    Today   获取当前日期。
    UtcNow  获取一个 DateTime 对象，该对象设置为此计算机上的当前日期和时间，表示为协调世界时 (UTC)。
    Year    获取此实例所表示日期的年份部分。

    Add 返回一个新的 DateTime，它将指定 TimeSpan 的值加到此实例的值上。
    AddDays 返回一个新的 DateTime，它将指定的天数加到此实例的值上。
    AddHours    返回一个新的 DateTime，它将指定的小时数加到此实例的值上。
    AddMilliseconds 返回一个新的 DateTime，它将指定的毫秒数加到此实例的值上。
    AddMinutes  返回一个新的 DateTime，它将指定的分钟数加到此实例的值上。
    AddMonths   返回一个新的 DateTime，它将指定的月数加到此实例的值上。
    AddSeconds  返回一个新的 DateTime，它将指定的秒数加到此实例的值上。
    AddTicks    返回一个新的 DateTime，它将指定的计时周期数加到此实例的值上。
    AddYears    返回一个新的 DateTime，它将指定的年份数加到此实例的值上。
    CompareTo(DateTime) 将此实例的值与指定的 DateTime 值相比较，并返回一个整数，该整数指示此实例是早于、等于还是晚于指定的 DateTime 值。

    Equals(DateTime)    返回一个值，该值指示此实例是否与指定的 DateTime 实例相等。
    GetDateTimeFormats ()   将此实例的值转换为标准 DateTime 格式说明符支持的所有字符串表示形式。
    IsDaylightSavingTime    指示此 DateTime 实例是否在当前时区的夏时制范围内。
    Subtract(DateTime)  从此实例中减去指定的日期和时间。
    Subtract(TimeSpan)  从此实例中减去指定持续时间。
    ToFileTimeUtc   将当前 DateTime 对象的值转换为 Windows 文件时间。
    ToLocalTime 将当前 DateTime 对象的值转换为本地时间。
    ToString () 将当前 DateTime 对象的值转换为其等效的字符串表示形式。 （重写 ValueType .ToString ()。）

String：
    Insert  在此实例中的指定索引位置插入一个指定的 String 实例。 
    IndexOf(Char)   报告指定 Unicode 字符在此字符串中的第一个匹配项的索引。 
    IndexOf(Char, Int32)    报告指定 Unicode 字符在此字符串中的第一个匹配项的索引。该搜索从指定字符位置开始。
    IndexOfAny( Char [], Int32)     报告指定 Unicode 字符数组中的任意字符在此实例中第一个匹配项的索引。该搜索从指定字符位置开始。
    LastIndexOf(Char)   报告指定 Unicode 字符在此实例中的最后一个匹配项的索引位置。
    LastIndexOfAny( Char [])    报告在 Unicode 数组中指定的一个或多个字符在此实例中的最后一个匹配项的索引位置。
    Remove(Int32)   删除此字符串中从指定位置到最后位置的所有字符。
    Remove(Int32, Int32)    从此实例中的指定位置开始删除指定数目的字符。
    Replace(Char, Char) 返回一个新字符串，其中此实例中出现的所有指定 Unicode 字符都替换为另一个指定的 Unicode 字符。
    Replace(String, String) 返回一个新字符串，其中当前实例中出现的所有指定字符串都替换为另一个指定的字符串。
    StartsWith(String)  确定此字符串实例的开头是否与指定的字符串匹配。
    Substring(Int32, Int32) 从此实例检索子字符串。子字符串从指定的字符位置开始且具有指定的长度。
    Trim () 从当前 String 对象移除所有前导空白字符和尾部空白字符。 
    TrimEnd 从当前 String 对象移除数组中指定的一组字符的所有尾部匹配项。
    TrimStart   从当前 String 对象移除数组中指定的一组字符的所有前导匹配项。 

DataTable：表示内存中数据的一个表。其他使用 DataTable 的对象包括 DataSet 和 DataView。 



DataColumn 成员：
ColumnName  获取或设置 DataColumnCollection 中的列的名称。 
Caption 获取或设置列的标题。

Array 成员：
Clone   创建 Array 的浅表副本。 
CopyTo(Array, Int32)    将当前一维 Array 的所有元素复制到指定的一维 Array 中（从指定的目标 Array 索引开始）。 
Equals(Object)  确定指定的 Object 是否等于当前的 Object。 
GetLength   获取一个 32 位整数，该整数表示 Array 的指定维中的元素数。 
GetValue(Int32) 获取一维 Array 中指定位置的值。
GetValue(Int32, Int32)  获取二维 Array 中指定位置的值。
GetValue(Int32, Int32, Int32)   获取三维 Array 中指定位置的值。
SetValue(Object, Int32) 将某值设置给一维 Array 中指定位置的元素。
Exists <T > 确定指定数组包含的元素是否与指定谓词定义的条件匹配。

还有其他直接调用的方法未列出：如Array.Exists() Array.Find() 等

ArrayList：使用大小可按需动态增加的数组实现 IList 接口。 
Add 将对象添加到 ArrayList 的结尾处。 
AddRange    将 ICollection 的元素添加到 ArrayList 的末尾。
Clear   从 ArrayList 中移除所有元素。
Clone   创建 ArrayList 的浅表副本。
Contains    确定某元素是否在 ArrayList 中。
CopyTo(Array)   从目标数组的开头开始将整个 ArrayList 复制到兼容的一维 Array 中。
CopyTo(Array, Int32)    从目标数组的指定索引处开始将整个 ArrayList 复制到兼容的一维 Array。
CopyTo(Int32, Array, Int32, Int32)  从目标数组的指定索引处开始，将一定范围的元素从 ArrayList 复制到兼容的一维 Array 中。
Equals(Object)  确定指定的 Object 是否等于当前的 Object。 （继承自 Object。） 
GetRange    返回 ArrayList，它表示源 ArrayList 中元素的子集。 
IndexOf(Object) 搜索指定的 Object，并返回整个 ArrayList 中第一个匹配项的从零开始的索引。
IndexOf(Object, Int32)索指定的Object，并返回ArrayList中从指定索引到最后一个元素的元素范围内第一个匹配项的从零开始的索引。
IndexOf(Object, Int32, Int32)   搜索指定的 Object，并返回 ArrayList 中从指定的索引开始并包含指定的元素数的元素范围内第一个匹配项的从零开始的索引。
Insert  将元素插入 ArrayList 的指定索引处。
InsertRange 将集合中的某个元素插入 ArrayList 的指定索引处。
LastIndexOf(Object) 搜索指定的 Object，并返回整个 ArrayList 中最后一个匹配项的从零开始的索引。
LastIndexOf(Object, Int32)  搜索指定的 Object，并返回 ArrayList 中从第一个元素到指定索引的元素范围内最后一个匹配项的从零开始的索引。
LastIndexOf(Object, Int32, Int32)   搜索指定的 Object，并返回 ArrayList 中包含指定的元素数并在指定索引处结束的元素范围内最后一个匹配项的从零开始的索引。 

Remove  从 ArrayList 中移除特定对象的第一个匹配项。
RemoveAt    移除 ArrayList 的指定索引处的元素。
RemoveRange 从 ArrayList 中移除一定范围的元素。 
Reverse ()  将整个 ArrayList 中元素的顺序反转。
Reverse(Int32, Int32)   将指定范围中元素的顺序反转。
SetRange    将集合中的元素复制到 ArrayList 中一定范围的元素上。
Sort () 使用每个元素的 IComparable 实现对整个 ArrayList 中的元素进行排序。 

IDictionary：
Add,clear,Remove,Contains,keys,values,count