oauth2
http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html
-------------------------------------------------------------------
改 debug-toolbar  的 jquery：
c:\Python27\Lib\site-packages\debug_toolbar\settings.py
CONFIG_DEFAULTS = {
    }
    'JQUERY_URL': '//libs.baidu.com/jquery/1.8.3/jquery.js',
---
site-packages\django_oscar-1.1_dev-py2.7.egg\oscar\templates\oscar\base.html:
74:             <script src="{% static "oscar/js/jquery/jquery-1.9.1.min.js" %}"></script>

---
site-packages\django_oscar-1.1_dev-py2.7.egg\oscar\templates\oscar\dashboard\layout.html:
<script src="//code.jquery.com/ui/1.10.3/jquery-ui.min.js" type="text/javascript" charset="utf-8"></script>
  153:     <script>window.jQuery.ui || document.write('<script src="{% static "oscar/js/jquery/jquery-ui-1.10.3.min.js" %}"><\/script>')</script>

fonts.google: dashboard.css/less
code.jquery:
templates\oscar\customer\order\order_list.html
templates\oscar\dashboard\layout.html
---------------------------------------------------------
virtualenv [虚拟环境名称] 
启动虚拟环境
source ./bin/activate
退出虚拟环境
deactivate
Virtualenv 附带有pip安装工具，因此需要安装的套件可以直接运行：
pip install [套件名称]
如果没有启动虚拟环境，系统也安装了pip工具，那么套件将被安装在系统环境中，为了避免发生此事，可以在~/.bashrc文件中加上：
export PIP_REQUIRE_VIRTUALENV=true
或者让在执行pip的时候让系统自动开启虚拟环境：
export PIP_RESPECT_VIRTUALENV=true

pip install virtualenvwrapper
下面两行添加到~/.bashrc里
export WORKON_HOME=~/workspaces
source /usr/bin/virtualenvwrapper.sh

mkvirtualenv env2
lsvirtualenv -b
lssitepackages
切换环境：workon [env]
随时使用“workon 环境名”可以进行环境切换，如果不带环境名参数，则显示当前使用的环境
退出环境：deactivate
- showvirtualenv [env] 显示指定环境的详情。
- rmvirtualenv [env] 移除指定的虚拟环境，移除的前提是当前没有在该环境中工作。如在该环境工作，先使用deactivate退出。
- cpvirtualenv [source] [dest] 复制一份虚拟环境。
- cdvirtualenv [subdir] 把当前工作目录设置为所在的环境目录。
- cdsitepackages [subdir] 把当前工作目录设置为所在环境的sitepackages路径。
- add2virtualenv [dir] [dir] 把指定的目录加入当前使用的环境的path中，这常使用于在多个project里面同时使用一个较大的库的情况。
- toggleglobalsitepackages -q 控制当前的环境是否使用全局的sitepackages目录。

进入当前环境的目录：cdvirtualenv [子目录名]

Server version: Apache/2.2.15 (Unix)
https://pypi.python.org/pypi/mod_wsgi/4.4.6
----------------------------------------
pip：
# 导出当前环境下的所有第三方库
pip freeze > requirements.txt
# 在新环境下安装所有文件内的第三方库
pip install -r requirements.txt
yum install python-virtualenv

-----------------------------------------------------------------------------
django-admin.py startproject testsite
python manage.py runserver 8080
python manage.py startapp books
python manage.py runmodwsgi
python manage.py sqlall books
python manage.py syncdb && python manage.py migrate 
python manage.py loaddata artmall_all_data.json
python manage.py makemigrations
python manage.py migrate
python manage.py validate 。 它可以帮助你捕获一些常见的模型定义错误。
带--fake参数执行migrate命令时，只将migration文件记录到数据库的django_migrations表，
如果是用South的migration文件，fake操作就很关键了。

syncdb仅仅创建数据库里还没有的表，它并不对你数据模型的修改进行同步,也不处理数据模型的删除。
修改模型字段后：
python manage.py makemigrations
python manage.py sqlmigrate books 0002
然后到数据库查询器里面执行生成的sql代码。

------------------------------------------------------
django-oscar 安装： 
Successfully installed 
Babel-1.3 Unidecode-0.4.17 django-1.7.8 django-appconf-1.0.1 django-compressor-1.5 django-extra-views-0.6.4 django-haystack-2.3.1 django-oscar-1.0.2 django-tables2-0.15.0 django-treebeard-2.0 factory-boy-2.4.1 mock-1.0.1 phonenumbers-6.3.0 pillow-2.4.0 purl-1.1 pytz-2015.4 six-1.9.0 sorl-thumbnail-11.12.1b0
-----------------------------------------------------
apt-get install python-dev 
sudo apt-get install  libjpeg-dev[el] freetype [libfreetype6-dev]
gd 库编译安装
"decoder jpeg not available"
http://www.ithao123.cn/content-8103388.html
http://stackoverflow.com/questions/18504835/pil-decoder-jpeg-not-available-on-ubuntu-x64/20091508
1. clear PIL packages

rm -rf /usr/lib/python2.7/site-packages/PIL
rm -rf /usr/lib/python2.7/site-packages/PIL.pth

2. install required packages

ubuntu:
apt-get install libjpeg-dev libfreetype6-dev zlib1g-dev libpng12-dev

centos:
yum install zlib zlib-devel
yum install libjpeg libjpeg-devel
yum install freetype freetype-devel

3. download Image and install

wget http://effbot.org/downloads/Imaging-1.1.7.tar.gz
tar xzvf Imaging-1.1.7.tar.gz

python2.7 setup.py install
4. check if it works

# before this command you should run `mv PIL PIL2`

python2.7 selftest.py
安装到了系统的  
/usr/local/lib/python2.7/dist-packages/PIL/PIL-1.1.7.egg-info
/usr/local/lib/python2.7/dist-packages/PIL
需要复制到 虚拟环境里！
-------------------------------------------------
pip install django==1.7.1
pip install django-oscar pillow
pip install django-debug-toolbar
pip install django-debug-toolbar-template_timings_panel

pip install requests
pip install django-localflavor

pip install whoosh
pip install jieba
haystack 
pip install psycopg2
pip install alipay

---------------------------------------------

pip install supervisor
echo_supervisord_conf > svisor_cn.conf 
supervisord -c svisor_cn.conf 


settings.py 里面：
thumbnail_debug = True

数据库直接远程导入

备份：
/var/lib/postgresql/9.3/artmall-db.sql
mv  /var/lib/postgresql/9.3/artmall-db.sql  /var/lib/postgresql/9.3/$(date +'%Y-%m-%d-%H-%M-%S').sql
-------------------------------------
thumbnail_kvstore 静态文件替换后要清空
---------------------------------------------------------------------
http://www.cnblogs.com/eastday/archive/2013/05/31/3109819.html
http://blog.itpub.net/9521459/viewspace-759918/
更改postgres密码：
sudo su postgres
[sudo] password for oydsoft: 
postgres@wsc:/home/oydsoft$ psql
psql (9.3.5)
Type "help" for help.
postgres=# \du
postgres=# alter user postgres with password '123'
postgres-# ;
ALTER ROLE

改配置：
sudo /etc/init.d/postgresql restart

django-admin startproject artmall


安装postgres驱动：
pip install psycopg2
sudo apt-get install postgresql-server-dev-9.3
pip install django-widget-tweaks
python manage.py runmodwsgi

service postgresql initdb
/var/lib/pgsql/data 
让数据库开机启动
chkconfig --add postgresql 
chkconfig postgresql on
-------------------------
修改数据库超级用户postgres的密码
sudo passwd postgres
切换到ubuntu下postgres用户
sudo su postgres

createdb test

postgresql.conf   listen_addresses项值设定为"*"
host    all    all    0.0.0.0/0    md5
http://francs3.blog.163.com/blog/static/4057672720138953548912/
pg_hba.conf
host    all         all         127.0.0.1/32          ident
host    all         all         192.168.0.111/16      trust
local   all             all                           trust
--------
host    all             all     127.0.0.1/32          trust
host    all             all     ::1/128               md5
host    all             all     192.168.93.0/24       trust
host    all             all     192.168.0.111/32      trust

-------------------------------------------------------------------
*** Python threads support is disabled. You can enable it with --enable-threads ***
ImportError: No module named django_wsgi

列出端口占用情况：
netstat -lpnt

uwsgi：
http://django-china.cn/topic/101/
apt-get update
apt-get install uwsgi uwsgi-core uwsgi-plugin-python libxml2-dev python-dev python-pip

http://www.cnblogs.com/lxg226/p/3468558.html (nginx server 配置注意)
http://www.nowamagic.net/academy/detail/1330331
http://mdba.cn/?p=109

uwsgi --http :8001 --chdir /var/www/wsctest/artmall-src/oscar/ --module django_wsgi

-----
http://www.nowamagic.net/academy/detail/1330334
有时候因各种环境问题，-x --xml 命令识别不了，可以使用下面的 ini 配置方式：
uwsgi --ini wsgi.ini

[uwsgi]
vhost= true 
# no-site = true
socket= 127.0.0.1:8078
chdir= /var/www/dtest/dtest/
wsgi-file = /var/www/dtest/dtest/dtest_wsgi.py
processes = 4
threads = 2
virtualenv = /var/www/dtest/
--------

http://www.cnblogs.com/xiongpq/p/3381069.html 配置全部含脚本
http://www.nowamagic.net/academy/detail/1226280 简明魔法的nginx 
操作uwsgi进程(切换到<project path>目录下):

    启动：uwsgi --ini uwsgi_XXX.ini
    停止：uwsgi --stop uwsgi.pid
    reload: uwsgi --reload uwsgi.pid

app 一定要放在和 manage.py 同级
错误：
看日志
IOError: [Errno 13] Permission denied: '/home/artmalluser/oscar/artmall/artmall/logs/errors.log'
upstream prematurely closed connection while reading response header from upstream,
重装 sudo pip install uwsgi 和虚拟环境，退出虚拟，然后重新激活。重启nginx. 
-----------
win 下 nginx + apache + django
http://daigong.iteye.com/blog/1019572
---------------------------------------------------------------------

改变目录后wsgi 等如果pylib里面没有就要重新安装。

编译mod_wsgi：
mod_wsgi-4.4.6$ ./configure --with-apxs=/usr/bin/apxs2 --with-python=/usr/bin/python
-------------------------------------
sudo chmod 644 /usr/lib/apache2/modules/mod_wsgi.so

LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so

pip install mod_wsgi
---------------------------------------------------------------------
以root权限运行不对，
目录权限需要调整，
nginx 运行权限需要调整。

图像滚动加载的错误处理。
----------------------------------
geoip:
wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz
apt-get install libgeoip-dev

gzip -d GeoIP.dat.gz 
sudo cp GeoIP.dat /etc/nginx

nginx.conf add:
geoip_country  /etc/nginx/GeoIP.dat;
geoip_city     /etc/nginx/GeoLiteCity.dat;

http://www.51cto.com/art/200602/21772.htm
无类域间路由
