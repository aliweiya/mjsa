java tomcat
系统变量里面：
path:
%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;d:\wamp\bin\php\php5.5.12;%CATALINA_HOME%\bin;%CATALINA_HOME%\lib;C:\Users\Administrator\AppData\Roaming\npm;

JAVA_HOME:
c:\Program Files\Java\jdk1.8.0_20

CLASSPATH:
.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar; 

CATALINA_HOME:
%CATALINA_HOME%\bin;%CATALINA_HOME%\lib

TOMCAT_HOME:
D:\Program Files\tomcat
-----------------------------------------------
Tomcat里 appBase和docBase的区别：
<host appBase="d:/aaa">
<Context path="/smswap" reloadable="true" docBase="D:\workspace\smswap\WebRoot"></Context>
</host>

先看appBase,这个目录表示：
1 这个目录下面的子目录将自动被部署为应用。
2 这个目录下面的.war文件将被自动解压缩并部署为应用

而docBase只是指向了你某个应用的目录，这个可以和appBase没有任何关系。

总结：
如果你想自己指定路径，那么应该在docBase里面
如果你想简单，那么直接把他们复制到appBase下面就行了

如果你把他们弄重复了，也就是2个指向了一个目录，看上去也能运行，但你的应用下面的每个子目录，其实是被部署为单独的应用的。
比如你的应用为

myApp, 放在了
d:\project\myApp
里面有2个子目录
d:\project\myApp\images
d:\project\myApp\js

你可以通过
1 设置 appBase 指向 d:\project 来让系统自动部署
2 你可以手工指定docBase到 d:\project\myApp
3 如果你指定了 appBase到 d:\project\myApp 那么
d:\project\myApp\images这个将不再是普通的子目录，而是一个单独的虚拟目录，或者叫应用了。因为其被自动部署
d:\project\myApp\js 也一样的后果 
-----------------------------------------------
