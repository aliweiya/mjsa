d3.js
d3的学习曲线确实比较陡，因为它的思想和我们通常绘图的方式不大一样：
1、它是声明式的，不是命令式的
d3的第一个核心是：数据驱动的dom元素创建，把这个思想上的弯绕过来，掌握1/3了
2、它是数据处理包，不是图形绘制包
d3的第二个核心是：它的大量的api，提供的是对数据的转换与处理，无论是scale、layout还是svg.line等，都仅仅是对数据的处理，和绘制图形与DOM操作没有半毛关系。把这个思想上的弯绕过来，又掌握1/3了
3、它的api通常返回的是一个函数，这个函数的具体功能，通过函数对象的方法约定。
d3的javascript写法不是那么符合常人的逻辑，比如：调用d3.svg.line()，这个我们获得的是一个line函数，作用是把原始数据转化成svg的path元素的d属性需要的字符串，如果连起来写的话是这样：
var nd=d3.svg.line()(data); 这样获得的nd才是可以塞给path的d属性的东西。把这个思想上的弯绕过来，又掌握1/3的

以上三点转过来以后，基本算理解d3背后的思路了，大约看文档也可以独立写点东西出来了。d3的使用模式如下：
step1：准备数据
step2：创建dom
step3：设置属性

不过，由于D3是用svg绘图，所以，还得花点功夫学下svg。

接下来，挨个的把api通读一遍，在console里试试各个api的作用，基本ok了。 