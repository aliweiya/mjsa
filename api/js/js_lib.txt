http://64.233.167.164/
http://64.233.167.165/
http://64.233.167.163/

underscore template 用法改变：
http://www.bennadel.com/blog/2411-using-underscore-js-templates-to-render-html-partials.htm
需要设置 _.templateSettings.variable = "rc";
var template = _.template( $("#pt").html());
var tempdata = { "datas": datas };
$("#bqrw").html( template(tempdata) );
<%_.each(rc.datas, function(item)) %>
-----------------------

Promise -> Express -> Parse[backbone]

https://a26.d.akamai.net/f/1/1/1/dci.download.akamai.com/35985/159415/1/g/
最后这个是镜像网站
image: 'http://placekitten.com/' + newWidth + '/300',

在Angular的争议发生后，Reddit上的另一篇文章问：JavaScript开发人员应该迁移到什么技术。

下面是javascript程序应该做的：

React.js 和 Flux (一只有视图 view-only 的库和事件驱动模块)
Ember.js (MVC框架)
Knockout.js (视图库)
Backbone.js (MVC框架)
Meteor (同构框架)
Mithril (MVC框架)
Ember (MVC框架)
‘不要框架，只需要一堆库就可以了’
Vue.js (视图库)
Breeze.js (数据库Model-only)
Ractive (视图库)

HTML Imports, HTML Templates, Custom Elements 和 Shadow DOM 都是有利的技术，应该让我们减小对框架的依赖，允许创建可重复使用的元素和功能。下面这些技术可以更好地实现这一点：

HTML Imports
Polymer
X-Tag
Bosonic

其实，你需要确保Web组件工作的第一件事是用polyfills来实现该功能，如X-Tag和Polymer。避免那些旧版浏览器不支持的情况。 
------------------------------------------------------------------
mockjax：
<script src="{% static "js/jquery.mockjax.js" %}"></script>
<script src="{% static "test/tjax.js" %}"></script>
------------------------------------------------------------------
高度不变，加粗后宽度加1
网页: font-size:60px; 在ps中实际45px--43px
ps:   font-size:60px; 58px-60px 相差约15px
14px网页字体与ps相差3px
http://www.gbtags.com/gb/share/1945.htm
构建工具/taskrunner（比如Grunt）
UI小部件库（比如KendoUI）
运行测试（比如Karma）
架构方案（比如Yeoman）

导航：http://123.jser.us/
---------------------------------------------------------------------------
force IE into standards mode:
<meta http-equiv="X-UA-Compatible" value="IE=edge" /> 同时加下面，
若页面需默认用极速核，增加标签：<meta name="renderer" content="webkit">
若页面需默认用ie兼容内核，增加标签：<meta name="renderer" content="ie-comp">
若页面需默认用ie标准内核，增加标签：<meta name="renderer" content="ie-stand">
content的取值为webkit,ie-comp,ie-stand之一，区分大小写，分别代表用webkit内核，IE兼容内核，IE标准内核。

<meta name="viewport" content="width=device-width,target-densitydpi=high-dpi,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/>

device-dpi –使用设备原本的 dpi 作为目标 dp。 不会发生默认缩放。
high-dpi – 使用hdpi 作为目标 dpi。 中等像素密度和低像素密度设备相应缩小。
medium-dpi – 使用mdpi作为目标 dpi。 高像素密度设备相应放大， 像素密度设备相应缩小。 这是默认的target density.
low-dpi -使用mdpi作为目标 dpi。中等像素密度和高像素密度设备相应放大。

<!--[if lt IE 9]>
<script src="http://libs.baidu.com/jquery/1.10.2/jquery.js"></script> 
<script src="http://cdn.bootcss.com/es5-shim/4.0.3/es5-shim.min.js"></script>
<script src="http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js"></script>
<script src="http://cdn.bootcss.com/nwmatcher/1.2.5/nwmatcher.min.js"></script>
<script src="http://cdn.bootcss.com/selectivizr/1.0.2/selectivizr.js"></script>
<script src="http://cdn.bootcss.com/respond.js/1.4.2/respond.js"></script>
<![endif]-->
---------------------------------------------------------------------------
百度cdn-jquery：
    支持的版本： 2.0.3, 2.0.2, 2.0.1, 2.0.0, 1.10.2, 1.10.1, 1.10.0, 1.9.1, 1.9.0, 1.8.3, 1.8.2, 1.8.1, 1.8.0, 1.7.2, 1.7.1, 1.7.0, 1.6.4, 1.6.3, 1.6.2, 1.6.1, 1.6.0, 1.5.2, 1.5.1, 1.5.0, 1.4.4, 1.4.3, 1.4.2, 1.4.1, 1.4.0, 1.3.2, 1.3.1, 1.3.0, 1.2.6, 1.2.3 
angular：
<script src="http://libs.baidu.com/jquery/1.10.2/jquery.js"></script> 
http://cdnjs.cloudflare.com/ajax/libs/knockout/3.1.0/knockout-min.js
http://ajax.microsoft.com/ajax/jquery.templates/beta1/jquery.tmpl.js
<script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.8/angular.min.js"></script>
jQueryui:
<script src="http://libs.baidu.com/jqueryui/1.9.2/jquery-ui.min.js "></script>
<link rel="stylesheet" type="text/css" media="screen" href="http://libs.baidu.com/jqueryui/1.9.2/themes/base/jquery-ui.css" />
支持的版本：1.10.2, 1.10.1, 1.10.0, 1.9.2, 1.9.1, 1.9.0, 1.8.24, 1.8.23, 1.8.22, 1.8.21, 1.8.20, 1.8.19, 1.8.18, 1.8.17, 1.8.16, 1.8.15, 1.8.14, 1.8.13, 1.8.12, 1.8.11, 1.8.10, 1.8.9, 1.8.8, 1.8.7, 1.8.6, 1.8.5, 1.8.4, 1.8.2, 1.8.1, 1.8.0, 1.7.3, 1.7.2, 1.7.1, 1.7.0, 1.6.0, 1.5.3, 1.5.2

easing：
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js" type="text/javascript"></script>

swfObject：
<script src="http://libs.baidu.com/swfobject/2.2/swfobject.js"></script>

underscore：
<script src="http://libs.baidu.com/underscore/1.3.3/underscore-min.js"></script>
<script src="http://cdn.staticfile.org/underscore.js/1.6.0/underscore-min.js"></script>

backbone：
<script src="http://cdn.staticfile.org/backbone.js/1.1.2/backbone-min.js"></script>


开发静态文件：
http://www.staticfile.org/

jQuery Tools：
<script src="http://libs.baidu.com/jquerytools/1.2.7/jquery.tools.min.js"></script>
<script src="http://cdn.jquerytools.org/1.2.7/all/jquery.tools.min.js"></script>

JSON：
<script src=" http://libs.baidu.com/json/json2/json2.js"></script>

Qunit：
<script src="http://libs.baidu.com/quint/1.9.0/qunit.js"></script>
　　
json3用在解析wennuke传回的.net json对象，进行测试：
-------------------------------------------------------------------
浏览器识别：
var isIE6 = navigator.userAgent.indexOf("MSIE 6.0") !== -1;
var isIE7 = navigator.userAgent.indexOf("MSIE 7.0") !== -1;
var isIE8 = navigator.userAgent.indexOf("MSIE 8.0") !== -1;
var isIE9 = navigator.userAgent.indexOf("MSIE 9.0") !== -1;
var isIE10 = navigator.userAgent.indexOf("MSIE 10.0") !== -1;
//!var isIE11 = navigator.userAgent.indexOf("IE 11.0") !== -1;
var isIE11 = /\btrident\/[0-9].*rv[ :]11\.0/.test(navigator.userAgent);
var isIE = document.all && !window.XMLHttpRequest;
// 多个浏览器识别
var isIE678 = /\bMSIE [678]\.0\b/.test(navigator.userAgent);
https://github.com/aralejs/detector/issues/18
http://browserhacks.com/#ie

var isChrome = window.navigator.userAgent.indexOf("Chrome") !== -1;

if( jQuery.browser.msie && jQuery.browser.version == '8.0' ){

} 
---------------------------------------------------------------------

横向滚动条消失出现在hover元素时，是由于开启了firebug并固定在了浏览器中，影响宽度计算。把火狐浮动出来测试页面效果。

m_Aim_sony 里面有 menuAim 插件的用法，类似亚马逊纵向菜单的鼠标走向角度的判断。和 correctPNG() 函数。

scroll/jQuery.Marquee 里面有 jQuery.pause 插件。用于动画的暂停。
http://ip.taobao.com/service/getIpInfo.php?ip=124.127.167.46
##tab
-------------------------------------------------------------------
------------
/* 代码片段 */

-------------------------------------------------

获取随机固定宽度的图片：
    function genBrick() {
        var height = ~~ (Math.random() * 500) + 100;
        var id = ~~ (Math.random() * 10000);
        console.log(height, id);
        return {
            src: 'http://lorempixel.com/g/280/' + height + '/?' + id
        };
    };

    $scope.bricks = [
        genBrick(),
        genBrick(),
        genBrick(),
        genBrick(),
        genBrick()
    ];

window: 判断
function isWin(elem) {
    return !elem.nodeName ||
        $.inArray(elem.nodeName.toLowerCase(), ['iframe','#document','html','body']) !== -1;
}   
elem = win ? this.contentWindow || window : this,
