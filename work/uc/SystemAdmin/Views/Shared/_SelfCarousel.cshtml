@*@model List<UCFramework.Infrastructure.SDK.CarouselAPI.Carousel>*@

@{ 
    List<UCFramework.Infrastructure.SDK.CarouselAPI.Carousel> Carousels = null;
    if (Model is List<UCFramework.Infrastructure.SDK.CarouselAPI.Carousel>)
    {
        Carousels = Model as List<UCFramework.Infrastructure.SDK.CarouselAPI.Carousel>;
    }
    if (Carousels == null)
    {
        Carousels = new UCFramework.Infrastructure.SDK.CarouselAPI().Query();
    }
}

<div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
    <!-- Indicators -->
    <ol class="carousel-indicators">

        @for (int i=0;i< Carousels.Count; i++)
        {
            <li data-target="#carousel-example-generic" data-slide-to="@i" class="@(Carousels[i].Actived?"active":"")"></li>
        }        

    </ol>
    <!-- Wrapper for slides -->
    <div class="carousel-inner pic_height" role="listbox">
        @foreach (var carousel in Carousels)
        {
            <div class="item@(carousel.Actived?" active":"")">
                <img src="@carousel.ImageSrc" alt="..." style="width:100%">
                <div class="carousel-caption">
                    @carousel.Caption
                </div>
            </div>
        }
    </div>
    <!-- Controls -->
    <!-- <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>-->
</div>